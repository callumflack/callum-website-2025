@import "tailwindcss";
@plugin "tailwindcss-animate";

@custom-variant dark (&:is(.dark *));

@import "./colors";
@import "./utils";
@import "./code";

/*
  Learn Tailwind 4
  https://tailwindcss.com/docs/adding-custom-styles
  https://tailwindcss.com/docs/functions-and-directives
  https://tailwindcss.com/docs/theme
  https://tailwindcss.com/docs/theme#default-theme-variable-reference

  Default breakpoints:
  sm	40rem (640px)
  md	48rem (768px)
  lg	64rem (1024px)
  xl	80rem (1280px)
  2xl	96rem (1536px)

  NB! Use "inline" when defining theme variables that reference other variables:
  https://tailwindcss.com/docs/theme#using-your-theme-variables
 */

@theme inline {
  /* completely disable all default theme variables */
  /* --*: initial; */

  /* text */
  --text-*: initial;

  /* 
    THIS? clamp(2.2rem, 4cqw + 0.5rem, 2.8rem); 
    cqw (Container Query Width) is a container query unit that represents 1% of a container's width. Still experimental.
  */
  --text-fine: clamp(9px, 7.5714px + 0.2857vw, 11px);
  --text-pill: clamp(10px, 8.9286px + 0.2143vw, 11.5px);
  --text-meta: clamp(11px, 9.2143px + 0.3571vw, 13.5px);
  --text-body: clamp(14px, 12.5714px + 0.2857vw, 16px);
  --text-heading: clamp(17px, 13.4286px + 0.7143vw, 22px);
  --text-title: clamp(22px, 16.2857px + 1.1429vw, 30px);

  --default-line-height: calc(24 / 17);
  --text-pill--line-height: 1;
  --text-body--line-height: var(--default-line-height);
  --text-heading--line-height: 1.25;
  --text-title--line-height: 1.1;
  --text-super--line-height: 0.9;
  --text-pill--letter-spacing: 0.025em;
  --text-fine--letter-spacing: 0.0175em;
  --text-metaHeading--letter-spacing: 0.125em;
  --text-body--letter-spacing: 0;
  --text-heading--letter-spacing: -0.01em;
  --text-title--letter-spacing: -0.015em;

  --text-heading--font-weight: 400;
  --text-title--font-weight: 400;
  --text-super--font-weight: 200;

  /* container */
  --container-text: 600px;
  --container-hero: 1040px;
  --container-text-inset: calc(
    var(--container-text) + (var(--spacing-inset) * 2)
  );
  --container-hero-inset: calc(
    var(--container-hero) + (var(--spacing-inset) * 2)
  );
  --inset-full: calc((100vw - var(--spacing-inset)) * 2);
  --inset-text: calc((100vw - var(--container-text)) / 2);
  --inset-hero: calc((100vw - var(--container-hero)) / 2);

  /* radius */
  --radius-xs: 2px;
  --radius-soft: 2px;
  --radius-button: 4px;
  --radius-card: 9px;
  --radius-squish: 13px;

  /* spacing */
  --spacing: 4px;

  --spacing-inset: clamp(15px, 8.5714px + 1.2857vw, 24px);
  --spacing-nav: clamp(68px, 64.57px + 0.69vw, 80px);
  --spacing-tab: clamp(44px, 42.57px + 0.69vw, 54px);
  --spacing-em: 1em;
  --spacing-bullet: 1.35em;

  --spacing-gap: clamp(10.5px, 6.5714px + 0.7857vw, 16px);
  --spacing-small: clamp(16px, 10.2857px + 1.1429vw, 24px);
  --spacing-minor: clamp(32px, 20.5714px + 2.2857vw, 48px);
  --spacing-submajor: clamp(54px, 35.4286px + 3.7143vw, 80px);
  --spacing-major: clamp(64px, 41.1429px + 4.5714vw, 96px);

  --spacing-w4: clamp(10.5px, 6.5714px + 0.7857vw, 16px);
  --spacing-w5: clamp(12px, 8.5714px + 0.7857vw, 20px); /* TODO: WIP! */
  --spacing-w6: clamp(16px, 10.2857px + 1.1429vw, 24px);
  --spacing-w8: clamp(21px, 13.1429px + 1.5714vw, 32px);
  --spacing-w10: clamp(28px, 17.7143px + 2.2857vw, 40px);
  --spacing-w12: clamp(32px, 20.5714px + 2.2857vw, 48px);
  --spacing-w16: clamp(43px, 28px + 3vw, 64px);
  --spacing-w20: clamp(54px, 35.4286px + 3.7143vw, 80px);
  --spacing-w24: clamp(64px, 41.1429px + 4.5714vw, 96px);
  --spacing-w28: clamp(75px, 48.5714px + 5.2857vw, 112px);
  --spacing-w32: clamp(85px, 54.2857px + 6.1429vw, 128px);
  --spacing-w36: clamp(96px, 61.7143px + 6.8571vw, 144px);
  --spacing-w42: clamp(112px, 72px + 8vw, 168px);
  --spacing-w48: clamp(128px, 82.2857px + 9.1429vw, 192px);
  --spacing-w64: clamp(171px, 110.2857px + 12.1429vw, 256px);
  --spacing-w72: clamp(192px, 123.4286px + 13.7143vw, 288px);
  --spacing-w96: clamp(256px, 164.5714px + 18.2857vw, 384px);

  /* colors */
  --color-*: initial;
  --color-black: #000;
  --color-white: #fff;

  --color-canvas: var(--color-gray-base);
  --color-canvas-contrast: var(--color-canvas-contrast);
  --color-panel: var(--color-canvas-contrast);
  --color-background: var(--color-gray-bg-hover);
  --color-background-hover: var(--color-gray-bg-active);
  --color-border: var(--color-gray-border);
  --color-line: var(--color-gray-line);
  --color-ring: var(--color-gray-ring);
  --color-border-hover: var(--color-gray-border-hover);
  --color-solid-light: var(--color-gray-solid-light);
  --color-solid: var(--color-gray-solid);
  --color-solid-hover: var(--color-gray-solid-hover);
  --color-fill-light: var(--color-gray-fill);
  --color-fill: var(--color-gray-fill-contrast);

  --color-accent: var(--color-accent1-solid);
  --color-accent2: var(--color-accent2);
  --color-accent3: var(--color-accent3-solid);
  --color-accent3hover: var(--color-accent3-solid-hover);
  --color-accent3bg: var(--color-accent3-solid-bg);

  /* Shadcn UI */
  /* --color-background: var(--background); */
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  /* --color-accent: var(--accent); */
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  /* --color-border: var(--border); */
  --color-input: var(--input);
  /* --color-ring: var(--ring); */
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

/* @media (min-width: 1024px) {
  @theme inline {
    --spacing-inset: 24px;
    --spacing-nav: 80px;
    --spacing-tab: 54px;
  }
} */

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  ::selection {
    @apply bg-fill text-canvas;
  }
  html {
    @apply bg-canvas;
  }
  body {
    @apply relative min-h-screen;
    @apply text-body font-sans font-normal antialiased;
    @apply bg-canvas text-fill;

    /* 1. Apple kerning, from http://design.byform.co/ */
    /* font-feature-settings: "kern" 1,'ss01' 1,'ss02' 1,'ss03' 1,'ss04' 1; */
    /* font-feature-settings:
      "kern" 1,
      "liga" 1; */

    /* transition everywhere: do NOT use tailwind here as the variables are inherited on every child transition */
    transition:
      color 500ms ease,
      opacity 500ms ease;

    &::before,
    &::after {
      position: fixed;
      top: 0;
      bottom: 0;
      width: 1px;
      background-color: var(--color-border);
      z-index: 1;
    }
    &::before {
      left: calc(50% - var(--container-text-inset) / 2);
    }
    &::after {
      right: calc(50% - var(--container-text-inset) / 2);
    }
    @media (min-width: 768px) {
      &::before,
      &::after {
        content: "";
      }
    }
  }
}

/*
  Use the components layer for any more complicated classes you want to add to your project that you'd still like to be able to override with utility classes.
  By defining component classes in the components layer, you can still use utility classes to override them when necessary.
  https://tailwindcss.com/docs/adding-custom-styles
 */

@layer components {
  /* 
   * Gallery hover effect - USED IN gallery-posts.tsx
   * When hovering any .gallery-item inside .group/gallery container:
   * - The hovered item stays in color
   * - All other items' img/video elements turn grayscale
   * Requires: parent grid to have "group/gallery" class, items to have "gallery-item" class
   */
  .group\/gallery:has(.gallery-item:hover) .gallery-item:not(:hover) img,
  .group\/gallery:has(.gallery-item:hover) .gallery-item:not(:hover) video {
    filter: grayscale(100%);
    @apply opacity-10;
  }
}
